/*
 * @lc app=leetcode.cn id=190 lang=golang
 *
 * [190] 颠倒二进制位
 */

// @lc code=start
func reverseBits(num uint32) uint32 {
	num = (num >> 16) | (num << 16)
	num = ((num & 0xff00ff00) >> 8) | ((num & 0x00ff00ff) << 8) //11111111000000001111111100000000 | 00000000111111110000000011111111
	num = ((num & 0xf0f0f0f0) >> 4) | ((num & 0x0f0f0f0f) << 4) //11110000111100001111000011110000 | 00001111000011110000111100001111
	num = ((num & 0xcccccccc) >> 2) | ((num & 0x33333333) << 2) //11001100110011001100110011001100 | 00110011001100110011001100110011
	num = ((num & 0xaaaaaaaa) >> 1) | ((num & 0x55555555) << 1) //10101010101010101010101010101010 | 01010101010101010101010101010101
	return num
}

// @lc code=end

